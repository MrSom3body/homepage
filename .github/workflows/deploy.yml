name: Deploy Homepage

on:
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:

jobs:
  build:
    name: Build Hugo Website
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Lix
        uses: DeterminateSystems/nix-installer-action@v18
        with:
          source-url: "https://install.lix.systems/lix/lix-installer-x86_64-linux"
          diagnostic-endpoint: "" # so eelco can have more personalized self-merges? no thank you
          backtrace: "true"
          extra-conf: |
            experimental-features = nix-command flakes

      - name: Setup Nix magic cache
        uses: DeterminateSystems/magic-nix-cache-action@v12
        with:
          diagnostic-endpoint: ""

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          nix develop --command -- hugo \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: homepage
          path: |
            public/
            wrangler.toml

  preview:
    name: Deploy (Preview)
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      deployments: write
    outputs:
      deployment-url: ${{ steps.deploy.outputs.deployment-url }}
    if: github.event_name == 'pull_request'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5

      - name: Deploy to Cloudflare (Development)
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: versions upload

  comment:
    name: Comment on PR
    runs-on: ubuntu-latest
    needs: preview
    permissions:
      pull-requests: write
    if: ${{ always() && github.event_name == 'pull_request' }}
    steps:
      - name: Comment PR
        uses: thollander/actions-comment-pull-request@v3
        with:
          comment-tag: deployment
          mode: upsert
          message: |
            ## Preview ${{ github.repository }} on Cloudflare

            | **Last commit** | ${{ github.event.pull_request.head.sha || github.event.workflow_run.head_sha || github.sha }} |
            | --------------- | - |
            | **Status**      | ${{ needs.preview.result == 'success' && '✅ Success' || '❌ Failed' }} |
            | **Preview URL** | ${{ needs.preview.result == 'success' && needs.preview.outputs.deployment-url || 'N/A' }} |

  deploy:
    name: Deploy (Production)
    runs-on: ubuntu-latest
    needs: build
    permissions:
      contents: read
      deployments: write
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5

      - name: Deploy to Cloudflare (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}

name: Deploy Homepage

on:
  push:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Lix
        uses: DeterminateSystems/nix-installer-action@v18
        with:
          source-url: "https://install.lix.systems/lix/lix-installer-x86_64-linux"
          diagnostic-endpoint: "" # so eelco can have more personalized self-merges? no thank you
          backtrace: "true"
          extra-conf: |
            experimental-features = nix-command flakes

      - name: Setup Nix magic cache
        uses: DeterminateSystems/magic-nix-cache-action@v12
        with:
          diagnostic-endpoint: ""

      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
        run: |
          nix develop --command -- hugo \
            --baseURL "${{ steps.pages.outputs.base_url }}/"

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: homepage
          path: |
            public/
            wrangler.toml

  preview:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref != 'refs/heads/main'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5

      - name: Deploy to Cloudflare (Development)
        id: deploy
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          command: versions upload

      - name: Find Comment
        uses: peter-evans/find-comment@v3
        id: fc
        with:
          issue-number: ${{ github.event.pull_request.number }}
          comment-author: "github-actions[bot]"
          body-includes: Preview

      - name: Comment or update PR
        uses: peter-evans/create-or-update-comment@v4
        if: always()
        with:
          comment-id: ${{ steps.fc.outputs.comment-id }}
          issue-number: ${{ github.event.pull_request.number }}
          body: |
            ## ${{ github.repository }} Preview

            **Status:** ${{ steps.deploy.outcome == 'success' && '✅ Deploy successful' || '❌ Deploy failed' }}
            **Preview URL:** ${{ steps.deploy.outcome == 'success' && steps.deploy.outputs.deployment-url || 'N/A' }}
          edit-mode: replace

  deploy:
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Download Artifacts
        uses: actions/download-artifact@v5

      - name: Deploy to Cloudflare (Production)
        uses: cloudflare/wrangler-action@v3
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
